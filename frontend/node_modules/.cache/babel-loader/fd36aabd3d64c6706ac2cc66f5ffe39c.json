{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\Ammattilaiset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport UserService from '../user/services/user-services';\nimport { getProfessionalsResults } from '../user/services/user-services';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Ammattilaiset = () => {\n  _s();\n\n  const [group, setGroup] = useState([]);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    getProfessionalsResults().then(response => setResults(response));\n  }, []);\n\n  var t = _.map(_.countBy(results, \"date\"), (val, key) => ({\n    date: key,\n    person: val\n  }));\n\n  console.log(t);\n\n  var pResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\n  .groupBy(x => x.date).map((value, key) => ({\n    date: key,\n    results: _.sumBy(value, 'times'),\n    nroPeople: _.countBy(value, 'person')['Lilly'],\n    users: value\n  })).value(); //var testi=pResult.concat(t);\n  //console.log(testi);\n\n\n  const person = [{\n    name: 'hello',\n    id: 1\n  }, {\n    name: 'javascript',\n    id: 2\n  }, {\n    name: 'world',\n    id: 3\n  }];\n  const selected = [2, 3];\n  console.log(pResult.map(obj => ({ ...obj,\n    person: t.person\n  })));\n  t.map(p => {\n    if (pResult.includes(pResult.date)) {\n      person = t.person;\n    }\n\n    return p;\n  });\n  console.log(t);\n\n  var hResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\n  .groupBy(x => x.person).map((value, key) => ({\n    person: key,\n    results: _.sumBy(value, 'times'),\n    users1: value\n  })).value();\n\n  console.log(pResult);\n  console.log(hResult);\n  const professionalsResults = pResult.map((result, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false));\n\n  const pResults = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Pvm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Suoritukset yhteens\\xE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Suorittajalkm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: professionalsResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Ammattilaiset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 61\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table-div\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: pResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Ammattilaiset, \"gqvZMB+38rr0PWL+3iChrsANPWo=\");\n\n_c = Ammattilaiset;\nexport default Ammattilaiset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ammattilaiset\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/Ammattilaiset.js"],"names":["React","useState","useEffect","Table","UserService","getProfessionalsResults","_","Ammattilaiset","group","setGroup","results","setResults","then","response","t","map","countBy","val","key","date","person","console","log","pResult","groupBy","x","value","sumBy","nroPeople","users","name","id","selected","obj","p","includes","hResult","users1","professionalsResults","result","index","pResults","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport UserService from '../user/services/user-services';\r\nimport {getProfessionalsResults} from '../user/services/user-services';\r\nimport _ from 'lodash';\r\n\r\nconst Ammattilaiset = () => {\r\n    const[group, setGroup] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n    useEffect (() =>{\r\n        getProfessionalsResults().then(response => setResults(response));\r\n    }, [])\r\n\r\n   var t= _.map(_.countBy(results, \"date\"), (val, key) => ({ date: key, person: val }));\r\n   console.log(t);\r\n\r\n    var pResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\r\n            .groupBy(x => x.date)\r\n            .map((value, key) => \r\n            ({date: key,\r\n            results: _.sumBy(value,'times'),\r\n            nroPeople: _.countBy(value, 'person')['Lilly'],\r\n            users: value})).value();\r\n\r\n            //var testi=pResult.concat(t);\r\n            //console.log(testi);\r\n\r\n            const person = [\r\n                {name: 'hello', id: 1},\r\n                {name: 'javascript',id: 2},\r\n                {name: 'world',id: 3}\r\n             ];\r\n             \r\n             const selected = [2,3];\r\n             \r\n            console.log( pResult.map(obj=> ({ ...obj, person: t.person })));\r\n             \r\n             t.map(p => {\r\n               if (pResult.includes(pResult.date)) {\r\n                 person=t.person;\r\n               }\r\n               return p;\r\n             });\r\n             \r\n             console.log(t);\r\n\r\n\r\n\r\n    var hResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\r\n    .groupBy(x => x.person)\r\n    .map((value, key) => \r\n    ({person: key,\r\n    results: _.sumBy(value,'times'),\r\n    users1: value})).value();\r\n\r\n            console.log(pResult);\r\n            console.log(hResult);\r\n\r\n    const professionalsResults = pResult.map((result,index) => \r\n    <>\r\n    <tr><td>{result.date}</td><td>{result.results}</td>\r\n    </tr>\r\n    </>\r\n    );\r\n    \r\n    \r\n    const pResults = (\r\n        <>\r\n        <thead>\r\n        <tr>\r\n        <th>Pvm</th>\r\n        <th>Suoritukset yhteensä</th>\r\n        <th>Suorittajalkm</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {professionalsResults}\r\n    </tbody>\r\n    </>\r\n    );\r\n    \r\n    return(\r\n        <>\r\n        <h2 style={{textAlign: \"center\"}}>Ammattilaiset</h2><br />\r\n        <div id=\"table-div\">\r\n            <Table striped bordered hover size=\"sm\">\r\n             {pResults}\r\n            </Table>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Ammattilaiset;"]},"metadata":{},"sourceType":"module"}
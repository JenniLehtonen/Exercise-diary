{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\DeleteWorkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport UserContext from '../contexts/UserContext';\nimport { getResultsByUser, deleteWorkout } from '../user/services/user-services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteWorkoutFromDB = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const userContext = useContext(UserContext);\n  let option; //alustetaan muuttuja. Tämän avulla saadaan valittu vaihtoehto dropdown listoissa.\n\n  let workouts = {\n    email: userContext.Email //haetaan kirjautuneen käyttäjän sähköpostiosoite contextista, ja sen avulla haetaan käyttäjän omat treenit tietokannasta\n\n  };\n  useEffect(() => {\n    getResultsByUser(workouts, userContext.token).then(response => setResults(response)); //Haetaan kirjautuneen käyttäjän treenit tietokannasta\n  }, []);\n\n  const optionHandler = e => {\n    e.preventDefault();\n    option = e.target.value;\n    option = option.substr(option.lastIndexOf(\" \") + 1); //Erotetaan valitun treenin id\n  };\n\n  const sendWorkoutToBeDeleted = () => {\n    deleteWorkout(option); //Lähetetään valittu treeni poistettavaksi\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Valitse poistettava treeni alasvetovalikosta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        size: \"sm\",\n        as: \"select\",\n        onChange: e => optionHandler(e),\n        children: results && results.map((result, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: result.date + \" \" + result.sport + \" \" + result._id\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: sendWorkoutToBeDeleted,\n      children: \"Poista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteWorkoutFromDB, \"egq3qbTzpUlUhQQf4VZ1JDnjs/E=\");\n\n_c = DeleteWorkoutFromDB;\nexport default DeleteWorkoutFromDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteWorkoutFromDB\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/DeleteWorkout.js"],"names":["React","useState","useEffect","useContext","Button","Form","UserContext","getResultsByUser","deleteWorkout","DeleteWorkoutFromDB","results","setResults","userContext","option","workouts","email","Email","token","then","response","optionHandler","e","preventDefault","target","value","substr","lastIndexOf","sendWorkoutToBeDeleted","map","result","index","date","sport","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,QAA8C,gCAA9C;;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMW,WAAW,GAAGT,UAAU,CAACG,WAAD,CAA9B;AACA,MAAIO,MAAJ,CAH8B,CAGlB;;AAEZ,MAAIC,QAAQ,GAAG;AACXC,IAAAA,KAAK,EAAEH,WAAW,CAACI,KADR,CACc;;AADd,GAAf;AAIAd,EAAAA,SAAS,CAAE,MAAK;AACZK,IAAAA,gBAAgB,CAACO,QAAD,EAAWF,WAAW,CAACK,KAAvB,CAAhB,CAA8CC,IAA9C,CAAmDC,QAAQ,IAAIR,UAAU,CAACQ,QAAD,CAAzE,EADY,CAC0E;AACzF,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,MAAM,GAACQ,CAAC,CAACE,MAAF,CAASC,KAAhB;AACAX,IAAAA,MAAM,GAAGA,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACa,WAAP,CAAmB,GAAnB,IAAwB,CAAtC,CAAT,CAHyB,CAG0B;AACtD,GAJD;;AAMA,QAAMC,sBAAsB,GAAG,MAAM;AACjCnB,IAAAA,aAAa,CAACK,MAAD,CAAb,CADiC,CACV;AAC1B,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEM,QAAC,IAAD,CAAM,KAAN;AAAA,6BACE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,IAAnB;AAAwB,QAAA,EAAE,EAAC,QAA3B;AAAoC,QAAA,QAAQ,EAAGQ,CAAD,IAAOD,aAAa,CAACC,CAAD,CAAlE;AAAA,kBACCX,OAAO,IAAIA,OAAO,CAACkB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrC,8BAAO;AAAA,sBAAqBD,MAAM,CAACE,IAAP,GAAc,GAAd,GAAoBF,MAAM,CAACG,KAA3B,GAAmC,GAAnC,GAAyCH,MAAM,CAACI;AAArE,aAAaH,KAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACF,SAFQ;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFN,eASK,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAIH,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATL;AAAA,kBADJ;AAaH,CApCD;;GAAMlB,mB;;KAAAA,mB;AAqCN,eAAeA,mBAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport UserContext from '../contexts/UserContext';\r\nimport {getResultsByUser, deleteWorkout} from '../user/services/user-services';\r\n\r\nconst DeleteWorkoutFromDB = () => {\r\n    const [results, setResults] = useState([]);\r\n    const userContext = useContext(UserContext);\r\n    let option; //alustetaan muuttuja. Tämän avulla saadaan valittu vaihtoehto dropdown listoissa.\r\n\r\n    let workouts = {\r\n        email: userContext.Email //haetaan kirjautuneen käyttäjän sähköpostiosoite contextista, ja sen avulla haetaan käyttäjän omat treenit tietokannasta\r\n    };\r\n\r\n    useEffect (() =>{\r\n        getResultsByUser(workouts, userContext.token).then(response => setResults(response)); //Haetaan kirjautuneen käyttäjän treenit tietokannasta\r\n    }, [])\r\n\r\n    const optionHandler = (e) => {\r\n        e.preventDefault();\r\n        option=e.target.value;\r\n        option = option.substr(option.lastIndexOf(\" \")+1); //Erotetaan valitun treenin id\r\n    };\r\n\r\n    const sendWorkoutToBeDeleted = () => {\r\n        deleteWorkout(option); //Lähetetään valittu treeni poistettavaksi\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <h6>Valitse poistettava treeni alasvetovalikosta</h6>\r\n              <Form.Group>\r\n                <Form.Control size=\"sm\" as=\"select\" onChange={(e) => optionHandler(e)}>\r\n                {results && results.map((result, index) => {\r\n                      return <option key={index}>{result.date + \" \" + result.sport + \" \" + result._id}</option>;\r\n                   })}\r\n                </Form.Control>\r\n             </Form.Group>\r\n             <Button onClick = {sendWorkoutToBeDeleted}>Poista</Button>\r\n          </>\r\n    )\r\n}\r\nexport default DeleteWorkoutFromDB;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { register } from '../user/services/user-services';\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [firstname, setFirstname] = React.useState('');\n  const [lastname, setLastname] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [checked, setChecked] = React.useState(false);\n\n  const firstnameHandler = e => {\n    e.preventDefault();\n    setFirstname(e.target.value);\n  };\n\n  const lastnameHandler = e => {\n    e.preventDefault();\n    setLastname(e.target.value);\n  };\n\n  const emailHandler = e => {\n    e.preventDefault();\n    setEmail(e.target.value);\n  };\n\n  const passwordHandler = e => {\n    e.preventDefault();\n    setPassword(e.target.value);\n  };\n\n  const registerNewAccount = () => {\n    let userType;\n\n    if (checked == true) {\n      userType = \"professional\";\n    } else {\n      userType = \"amateur\";\n    }\n\n    let accountObject = {\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      password: password,\n      userType: userType\n    };\n    console.log(accountObject); //register(accountObject);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Etunimi:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"Sy\\xF6t\\xE4 etunimesi\",\n        onChange: e => firstnameHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Sukunimi:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"Sy\\xF6t\\xE4 sukunimesi\",\n        onChange: e => lastnameHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"S\\xE4hk\\xF6posti:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"Sy\\xF6t\\xE4 s\\xE4hk\\xF6postiosoite\",\n        onChange: e => emailHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Salasana:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        required: true,\n        type: \"password\",\n        placeholder: \"Sy\\xF6t\\xE4 salasana\",\n        onChange: e => passwordHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        type: \"checkbox\",\n        checked: checked,\n        value: \"1\",\n        onChange: e => setChecked(e.currentTarget.checked),\n        children: \"Olen ammattilainen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: registerNewAccount,\n        children: \"Luo tili\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"zr2N55U/jDrYqR6wXLlIVjo34KY=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/Register.js"],"names":["React","useState","Button","Form","register","ToggleButton","Register","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","checked","setChecked","firstnameHandler","e","preventDefault","target","value","lastnameHandler","emailHandler","passwordHandler","registerNewAccount","userType","accountObject","console","log","currentTarget"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport {register} from '../user/services/user-services';\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\nconst Register = () => {\r\n  const [firstname, setFirstname] = React.useState('');\r\n  const [lastname, setLastname] = React.useState('');\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const firstnameHandler = (e) => {\r\n    e.preventDefault();\r\n    setFirstname(e.target.value);\r\n  };\r\n  const lastnameHandler = (e) => {\r\n    e.preventDefault();\r\n    setLastname(e.target.value);\r\n  };\r\n  const emailHandler = (e) => {\r\n    e.preventDefault();\r\n    setEmail(e.target.value);\r\n  };\r\n  const passwordHandler = (e) => {\r\n    e.preventDefault();\r\n    setPassword(e.target.value);\r\n  };\r\n    \r\n  const registerNewAccount = () => {\r\n    let userType;\r\n    if(checked==true){\r\n      userType=\"professional\"\r\n    } else{\r\n      userType=\"amateur\"\r\n    }\r\n    let accountObject = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        email: email,\r\n        password: password,\r\n        userType: userType\r\n    };\r\n    console.log(accountObject);\r\n    //register(accountObject);\r\n}\r\n    return(\r\n        <>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Etunimi:</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"Syötä etunimesi\" onChange={(e) => firstnameHandler(e)}/>\r\n            <Form.Label>Sukunimi:</Form.Label>\r\n            <Form.Control required type=\"text\" placeholder=\"Syötä sukunimesi\" onChange={(e) => lastnameHandler(e)}/>\r\n            <Form.Label>Sähköposti:</Form.Label>\r\n            <Form.Control required type=\"email\" placeholder=\"Syötä sähköpostiosoite\" onChange={(e) => emailHandler(e)}/>\r\n            <Form.Label>Salasana:</Form.Label>\r\n            <Form.Control required type=\"password\" placeholder=\"Syötä salasana\" onChange={(e) => passwordHandler(e)}/>\r\n            <ToggleButton type=\"checkbox\" checked={checked} value=\"1\" onChange={e => setChecked(e.currentTarget.checked)}>Olen ammattilainen</ToggleButton>\r\n            <br />\r\n            <Button onClick={registerNewAccount}>Luo tili</Button>\r\n          </Form.Group>\r\n          </>\r\n    )\r\n}\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}
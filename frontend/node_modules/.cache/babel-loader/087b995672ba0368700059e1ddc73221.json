{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\EditWorkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { getResultsByUser, editWorkout } from '../user/services/user-services';\nimport UserContext from '../contexts/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditWorkout = () => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const [id, setId] = React.useState('');\n  const [date, setDate] = React.useState('');\n  const [sport, setSport] = React.useState('');\n  const [times, setTimes] = React.useState('');\n  const [weight, setWeight] = React.useState('');\n  const [results, setResults] = useState([]);\n  const person = userContext.Email;\n  const usertype = userContext.UserType;\n  let option; //alustetaan muuttuja. Tämän avulla saadaan valittu vaihtoehto dropdown listoissa.\n\n  let workouts = {\n    email: userContext.Email //haetaan kirjautuneen käyttäjän sähköpostiosoite contextista, ja sen avulla haetaan käyttäjän omat treenit tietokannasta\n\n  };\n  useEffect(() => {\n    getResultsByUser(workouts, userContext.token).then(response => setResults(response)); //Haetaan kirjautuneen henkilön omat treenit\n  }, []);\n\n  const idHandler = e => {\n    e.preventDefault();\n    option = e.target.value;\n    option = option.substr(option.lastIndexOf(\" \") + 1); //Erotetaan valitun treenin id\n\n    setId(option);\n    console.log(option);\n    console.log(id);\n  };\n\n  const dateHandler = e => {\n    e.preventDefault();\n    setDate(e.target.value);\n  };\n\n  const sportHandler = e => {\n    e.preventDefault();\n    setSport(e.target.value);\n  };\n\n  const timesHandler = e => {\n    e.preventDefault();\n    setTimes(e.target.value);\n  };\n\n  const weightHandler = e => {\n    e.preventDefault();\n    setWeight(e.target.value);\n  };\n\n  const sendWorkoutToBeEdited = () => {\n    let workoutObject = {\n      id: id,\n      date: date,\n      sport: sport,\n      times: times,\n      weight: weight,\n      person: person,\n      userType: usertype\n    };\n    editWorkout(workoutObject, userContext.token).then(response => console.log(\"moi\" + response)).catch(err => {\n      console.log(\"moi\" + err);\n    }); //Lähetetään valittu treeni muokattavaksi\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Valitse muokattava treeni alasvetovalikosta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        size: \"sm\",\n        as: \"select\",\n        onChange: e => idHandler(e),\n        children: results && results.map((result, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: result.date + \" \" + result.sport + \" \" + result._id\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"P\\xE4iv\\xE4m\\xE4\\xE4r\\xE4:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"date\",\n      onChange: e => dateHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Laji:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      onChange: e => sportHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Suorituskerrat:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      onChange: e => timesHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Paino:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      onChange: e => weightHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: sendWorkoutToBeEdited,\n      children: \"Muokkaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditWorkout, \"Ts3HVwxciWWcJBwWT4mVptD2wNU=\");\n\n_c = EditWorkout;\nexport default EditWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditWorkout\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/EditWorkout.js"],"names":["React","useState","useEffect","useContext","Button","Form","getResultsByUser","editWorkout","UserContext","EditWorkout","userContext","id","setId","date","setDate","sport","setSport","times","setTimes","weight","setWeight","results","setResults","person","Email","usertype","UserType","option","workouts","email","token","then","response","idHandler","e","preventDefault","target","value","substr","lastIndexOf","console","log","dateHandler","sportHandler","timesHandler","weightHandler","sendWorkoutToBeEdited","workoutObject","userType","catch","err","map","result","index","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport {getResultsByUser, editWorkout} from '../user/services/user-services';\r\nimport UserContext from '../contexts/UserContext';\r\n\r\nconst EditWorkout = () => {\r\n  const userContext = useContext(UserContext);\r\n  const [id, setId] = React.useState('');\r\n  const [date, setDate] = React.useState('');\r\n  const [sport, setSport] = React.useState('');\r\n  const [times, setTimes] = React.useState('');\r\n  const [weight, setWeight] = React.useState('');\r\n  const [results, setResults] = useState([]);\r\n  const person = userContext.Email;\r\n  const usertype = userContext.UserType;\r\n\r\n  let option; //alustetaan muuttuja. Tämän avulla saadaan valittu vaihtoehto dropdown listoissa.\r\n  let workouts = {\r\n    email: userContext.Email //haetaan kirjautuneen käyttäjän sähköpostiosoite contextista, ja sen avulla haetaan käyttäjän omat treenit tietokannasta\r\n};\r\n  useEffect (() =>{\r\n    getResultsByUser(workouts, userContext.token).then(response => setResults(response)); //Haetaan kirjautuneen henkilön omat treenit\r\n  }, [])\r\n\r\n  const idHandler = (e) => {\r\n    e.preventDefault();\r\n    option=e.target.value;\r\n    option = option.substr(option.lastIndexOf(\" \")+1); //Erotetaan valitun treenin id\r\n    setId(option);\r\n    console.log(option);\r\n    console.log(id);\r\n  };\r\n  const dateHandler = (e) => {\r\n    e.preventDefault();\r\n    setDate(e.target.value);\r\n  };\r\n  const sportHandler = (e) => {\r\n    e.preventDefault();\r\n    setSport(e.target.value);\r\n  };\r\n  const timesHandler = (e) => {\r\n    e.preventDefault();\r\n    setTimes(e.target.value);\r\n  };\r\n  const weightHandler = (e) => {\r\n    e.preventDefault();\r\n    setWeight(e.target.value);\r\n  };\r\n  const sendWorkoutToBeEdited = () => {\r\n    let workoutObject = {\r\n      id : id,\r\n      date : date,\r\n      sport : sport,\r\n      times : times,\r\n      weight : weight,\r\n      person : person,\r\n      userType : usertype\r\n  };\r\n  editWorkout(workoutObject, userContext.token).then(response => console.log(\"moi\"+response)).catch(err =>{\r\n    console.log(\"moi\"+err)\r\n  }) //Lähetetään valittu treeni muokattavaksi\r\n  };\r\n    return(\r\n        <>\r\n            <h6>Valitse muokattava treeni alasvetovalikosta</h6>\r\n              <Form.Group>\r\n                <Form.Control size=\"sm\" as=\"select\" onChange={(e) => idHandler(e)}>\r\n                {results && results.map((result, index) => {\r\n                      return <option key={index}>{result.date + \" \" + result.sport + \" \" + result._id}</option>;\r\n                   })}\r\n                </Form.Control>\r\n             </Form.Group>\r\n             <Form.Label>Päivämäärä:</Form.Label>\r\n                <Form.Control type=\"date\" onChange={(e) => dateHandler(e)}/>\r\n                <Form.Label>Laji:</Form.Label>\r\n                <Form.Control type=\"text\" onChange={(e) => sportHandler(e)}/>\r\n                <Form.Label>Suorituskerrat:</Form.Label>\r\n                <Form.Control type=\"number\" onChange={(e) => timesHandler(e)}/>\r\n                <Form.Label>Paino:</Form.Label>\r\n                <Form.Control type=\"number\" onChange={(e) => weightHandler(e)}/>\r\n                <br />\r\n                <Button onClick = {sendWorkoutToBeEdited}>Muokkaa</Button>\r\n        </>\r\n    )\r\n}\r\nexport default EditWorkout;"]},"metadata":{},"sourceType":"module"}
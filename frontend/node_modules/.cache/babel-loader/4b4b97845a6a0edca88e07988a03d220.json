{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\Ammattilaiset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport UserService from '../user/services/user-services';\nimport { getProfessionalsResults } from '../user/services/user-services';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Ammattilaiset = () => {\n  _s();\n\n  const [group, setGroup] = useState([]);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    getProfessionalsResults().then(response => setResults(response));\n  }, []);\n  let personCount = 0; //suorittajalkm:n laskemiseksi\n\n  let workoutCount = 0; //suoritusten laskemiseksi\n\n  const personCounter = () => {\n    return personCount++;\n  };\n\n  for (let i = 0; i < results.length; i++) {\n    workoutCount += results[i].times + workoutCount;\n  }\n\n  let personArray = results.map(personCounter);\n  console.log(personArray);\n  console.log(workoutCount);\n  /*const groups = _.groupBy(results,  'date');\r\n  console.log(groups);*/\n\n  var result = _(results).groupBy(x => x.date).map((value, key) => ({\n    date: key,\n    results: value\n  })).value();\n\n  console.log(result);\n  let personCount2 = 0; //suorittajalkm:n laskemiseksi\n\n  let workoutCount2 = 0; //suoritusten laskemiseksi\n\n  /*const personCounter2 = () => {\r\n      return personCount2++;\r\n  };*/\n\n  for (let i = 0; i < result.length; i++) {\n    workoutCount2 += result[i].results.times + workoutCount2;\n  }\n\n  for (let i = 0; i < result.length; i++) {\n    personCount2 += result[i].results[i] + personCount2;\n  } //let personArray2 = result.map(personCounter2);\n  //console.log(personArray2);\n\n\n  console.log(personCount);\n  console.log(workoutCount2);\n\n  var result1 = _(results).groupBy(x => x.date).map((value, key) => ({\n    date: key,\n    results: _.sumBy(value, 'times'),\n    users: value\n  })).value();\n\n  console.log(result1);\n  const testi1 = result1.map((result1, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: personCount2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false));\n  const professionalsResults = results.map((result, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: workoutCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: personCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false));\n\n  const testi = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Pvm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Suoritukset yhteens\\xE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Suorittajalkm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Eka p\\xE4iv\\xE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: workoutCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: personCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), professionalsResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Ammattilaiset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 61\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table-div\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [testi, testi1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Ammattilaiset, \"gqvZMB+38rr0PWL+3iChrsANPWo=\");\n\n_c = Ammattilaiset;\nexport default Ammattilaiset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ammattilaiset\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/Ammattilaiset.js"],"names":["React","useState","useEffect","Table","UserService","getProfessionalsResults","_","Ammattilaiset","group","setGroup","results","setResults","then","response","personCount","workoutCount","personCounter","i","length","times","personArray","map","console","log","result","groupBy","x","date","value","key","personCount2","workoutCount2","result1","sumBy","users","testi1","index","professionalsResults","testi","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport UserService from '../user/services/user-services';\r\nimport {getProfessionalsResults} from '../user/services/user-services';\r\nimport _ from 'lodash';\r\n\r\nconst Ammattilaiset = () => {\r\n    const[group, setGroup] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n    useEffect (() =>{\r\n        getProfessionalsResults().then(response => setResults(response));\r\n    }, [])\r\n\r\n    let personCount = 0; //suorittajalkm:n laskemiseksi\r\n    let workoutCount = 0; //suoritusten laskemiseksi\r\n    const personCounter = () => {\r\n        return personCount++;\r\n    };\r\n    \r\n    for (let i=0; i < results.length; i++){\r\n        workoutCount += results.[i].times + workoutCount;\r\n    }\r\n   \r\n    let personArray = results.map(personCounter);\r\n    console.log(personArray);\r\n    console.log(workoutCount);\r\n\r\n    /*const groups = _.groupBy(results,  'date');\r\n    console.log(groups);*/\r\n\r\n    var result = _(results)\r\n            .groupBy(x => x.date)\r\n            .map((value, key) => ({date: key, results: value}))\r\n            .value();\r\n            console.log(result);\r\n\r\n            let personCount2 = 0; //suorittajalkm:n laskemiseksi\r\n            let workoutCount2 = 0; //suoritusten laskemiseksi\r\n\r\n            /*const personCounter2 = () => {\r\n                return personCount2++;\r\n            };*/\r\n            \r\n            for (let i=0; i < result.length; i++){\r\n                workoutCount2 += result.[i].results.times + workoutCount2;\r\n            }\r\n            for (let i=0; i < result.length; i++){\r\n                personCount2 += result.[i].results[i] + personCount2;\r\n            }\r\n            //let personArray2 = result.map(personCounter2);\r\n            //console.log(personArray2);\r\n            console.log(personCount);\r\n            console.log(workoutCount2);\r\n            var result1 = _(results)\r\n                   .groupBy(x => x.date)\r\n                   .map((value, key) => \r\n                   ({date: key,\r\n                    results: _.sumBy(value,'times'),\r\n                    users: value})).value();\r\n\r\n                    console.log(result1);\r\n\r\n    const testi1 = result1.map((result1,index) => \r\n    <>\r\n    <tr><td>{result.date}</td><td>{result.results}</td>\r\n    <td>{personCount2}</td></tr>\r\n    </>\r\n    );\r\n    \r\n\r\n    const professionalsResults = results.map((result, index) =>\r\n    <>\r\n    <tr><td>{result.date}</td><td>{workoutCount}</td>\r\n    <td>{personCount}</td></tr>\r\n    </>\r\n    );\r\n    const testi = (\r\n        \r\n        <>\r\n        <thead>\r\n        <tr>\r\n        <th>Pvm</th>\r\n        <th>Suoritukset yhteensä</th>\r\n        <th>Suorittajalkm</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>Eka päivä</td>\r\n            <td>{workoutCount}</td>\r\n            <td>{personCount}</td>\r\n        </tr>\r\n        {professionalsResults}\r\n    </tbody>\r\n    </>\r\n    );\r\n    \r\n    return(\r\n        <>\r\n        <h2 style={{textAlign: \"center\"}}>Ammattilaiset</h2><br />\r\n        <div id=\"table-div\">\r\n            <Table striped bordered hover size=\"sm\">\r\n             {testi}\r\n             {testi1}\r\n            </Table>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Ammattilaiset;"]},"metadata":{},"sourceType":"module"}
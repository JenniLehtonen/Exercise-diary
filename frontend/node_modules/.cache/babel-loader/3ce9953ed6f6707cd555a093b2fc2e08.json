{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\ModalDialog.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalDialog = () => {\n  _s();\n\n  const [user, setUser] = React.useState({\n    uid: \"\",\n    password: \"\",\n    name: \"\",\n    email: \"\"\n  });\n  const [visible, setVisible] = useState(false); //Rekisteröitymis-painiketta varten\n\n  const button = /*#__PURE__*/_jsxDEV(Button, {\n    id: \"register\",\n    onClick: () => setVisible(!visible),\n    children: \"Rekister\\xF6idy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this) //Rekisteröitymispainikkeen näkyvyyden muuttaminen\n  ;\n\n  const checkIsValid = () => {\n    if (loginState) {\n      return user.uid && user.password; //Katsotaan onko molemmat kentät syötetty sisäänkirjautumisessa\n    }\n  };\n\n  const uidHandler = e => {\n    e.preventDefault();\n    setUser({ ...user,\n      uid: e.target.value\n    });\n  };\n\n  const passwordHandler = e => {\n    e.preventDefault();\n    setUser({ ...user,\n      password: e.target.value\n    });\n  };\n\n  const nameHandler = e => {\n    // Miten hoidetaan, kun rekisteröityminen on eri komponentissa\n    e.preventDefault();\n    setUser({ ...user,\n      name: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    if (!checkIsValid()) {\n      alert(\"Tarkista syötteet!\");\n    } else {\n      setValidated(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Kirjaudu sis\\xE4\\xE4n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Kirjoita s\\xE4hk\\xF6posti ja salasana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"S\\xE4hk\\xF6posti:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Sy\\xF6t\\xE4 k\\xE4ytt\\xE4j\\xE4tunnus\",\n          required: true,\n          value: user.uid\n          /* VAI EMAIL?*/\n          ,\n          onChange: e => uidHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Salasana:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Sy\\xF6t\\xE4 salasana\",\n          required: true,\n          value: user.password,\n          onChange: e => passwordHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"logIn\",\n          onClick: () => {\n            setModalShow(false);\n            setVisible(false);\n            handleSubmit();\n          },\n          children: \"Kirjaudu sis\\xE4\\xE4n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Eik\\xF6 sinulla ole viel\\xE4 tili\\xE4?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), button, visible && /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Sulje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalDialog, \"a8BPIoG+seV1YLxdyXHj17YxFLs=\");\n\n_c = ModalDialog;\nexport default ModalDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalDialog\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/ModalDialog.js"],"names":["React","Button","Form","Modal","ModalDialog","user","setUser","useState","uid","password","name","email","visible","setVisible","button","checkIsValid","loginState","uidHandler","e","preventDefault","target","value","passwordHandler","nameHandler","handleSubmit","alert","setValidated","props","setModalShow","onHide"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst ModalDialog = () => {\r\n    \r\n    const [user, setUser] = React.useState({\r\n        uid: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        email: \"\"\r\n      });\r\n      const [visible, setVisible] = useState(false); //Rekisteröitymis-painiketta varten\r\n      const button = (\r\n        <Button id=\"register\"onClick={() => setVisible(!visible)}>Rekisteröidy</Button> //Rekisteröitymispainikkeen näkyvyyden muuttaminen\r\n      )\r\n      \r\n      const checkIsValid = () => {\r\n        if(loginState){\r\n          return user.uid && user.password; //Katsotaan onko molemmat kentät syötetty sisäänkirjautumisessa\r\n        }\r\n      }\r\n      const uidHandler = (e) => {\r\n        e.preventDefault();\r\n        setUser({...user, uid:e.target.value});\r\n      }\r\n      const passwordHandler = (e) => {\r\n        e.preventDefault();\r\n        setUser({...user, password:e.target.value});\r\n      }\r\n      const nameHandler = (e) => { // Miten hoidetaan, kun rekisteröityminen on eri komponentissa\r\n        e.preventDefault();\r\n        setUser({...user, name:e.target.value});\r\n      }\r\n      const handleSubmit = (e) => {\r\n        if(!checkIsValid()){\r\n          alert(\"Tarkista syötteet!\")\r\n        } else{\r\n          setValidated(true);\r\n        }\r\n      }\r\n      return (\r\n        <Modal\r\n          {...props}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Kirjaudu sisään\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <h6>Kirjoita sähköposti ja salasana</h6>\r\n              <Form.Label>Sähköposti:</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Syötä käyttäjätunnus\" \r\n              required value={user.uid /* VAI EMAIL?*/}\r\n              onChange={(e) => uidHandler(e)}/>\r\n              <Form.Label>Salasana:</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Syötä salasana\"\r\n              required value={user.password}\r\n              onChange={(e) => passwordHandler(e)} />\r\n              <br />\r\n              <Button id=\"logIn\" onClick={() =>{setModalShow(false); setVisible(false); handleSubmit();}}>Kirjaudu sisään</Button>\r\n            </Form.Group>\r\n            <br />\r\n            <h6>Eikö sinulla ole vielä tiliä?</h6>\r\n            {button}\r\n            {visible && <Register />}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={props.onHide}>Sulje</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )\r\n}\r\nexport default ModalDialog;"]},"metadata":{},"sourceType":"module"}
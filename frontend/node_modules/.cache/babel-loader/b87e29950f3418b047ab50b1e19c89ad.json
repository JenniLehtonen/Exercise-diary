{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\Ammattilaiset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport UserService from '../user/services/user-services';\nimport { getProfessionalsResults } from '../user/services/user-services';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Ammattilaiset = () => {\n  _s();\n\n  const [group, setGroup] = useState([]);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    getProfessionalsResults().then(response => setResults(response));\n  }, []);\n  let personCount = 0; //suorittajalkm:n laskemiseksi\n\n  const personCounter = () => {\n    return personCount++;\n  };\n\n  let personArray = results.map(personCounter);\n  console.log(personArray);\n  console.log(personCount);\n\n  var pResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\n  .groupBy(x => x.date).map((value, key) => ({\n    date: key,\n    results: _.sumBy(value, 'times'),\n    nroPeople: _.countBy(value, 'person')['lilly'],\n    users: value\n  })).value();\n\n  var hResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\n  .groupBy(x => x.person).map((value, key) => ({\n    person: key,\n    results: _.sumBy(value, 'times'),\n    users: _.sumBy(value, 'person'),\n    users1: value\n  })).value();\n\n  console.log(pResult);\n  console.log(hResult);\n  var out = results.reduce((s, e, i) => {\n    if (i === 0) s.push(e);else if (typeof s.find(ss => ss.date == e.date && ss.person == e.person && (ss.times += e.times)) == 'undefined') s.push(e);\n    return s;\n  }, []);\n  console.log(out);\n  const professionalsResults = pResult.map((result, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: result.nroPeople\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false));\n\n  const pResults = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Pvm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Suoritukset yhteens\\xE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Suorittajalkm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: professionalsResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Ammattilaiset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 61\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table-div\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: pResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Ammattilaiset, \"gqvZMB+38rr0PWL+3iChrsANPWo=\");\n\n_c = Ammattilaiset;\nexport default Ammattilaiset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ammattilaiset\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/Ammattilaiset.js"],"names":["React","useState","useEffect","Table","UserService","getProfessionalsResults","_","Ammattilaiset","group","setGroup","results","setResults","then","response","personCount","personCounter","personArray","map","console","log","pResult","groupBy","x","date","value","key","sumBy","nroPeople","countBy","users","hResult","person","users1","out","reduce","s","e","i","push","find","ss","times","professionalsResults","result","index","pResults","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAAQC,uBAAR,QAAsC,gCAAtC;AACA,OAAOC,CAAP,MAAc,QAAd;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAE,MAAK;AACZG,IAAAA,uBAAuB,GAAGO,IAA1B,CAA+BC,QAAQ,IAAIF,UAAU,CAACE,QAAD,CAArD;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIC,WAAW,GAAG,CAAlB,CAPwB,CAOH;;AACrB,QAAMC,aAAa,GAAG,MAAM;AACxB,WAAOD,WAAW,EAAlB;AACH,GAFD;;AAKA,MAAIE,WAAW,GAAGN,OAAO,CAACO,GAAR,CAAYF,aAAZ,CAAlB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AAEA,MAAIM,OAAO,GAAGd,CAAC,CAACI,OAAD,CAAD,CAAW;AAAX,GACLW,OADK,CACGC,CAAC,IAAIA,CAAC,CAACC,IADV,EAELN,GAFK,CAED,CAACO,KAAD,EAAQC,GAAR,MACJ;AAACF,IAAAA,IAAI,EAAEE,GAAP;AACDf,IAAAA,OAAO,EAAEJ,CAAC,CAACoB,KAAF,CAAQF,KAAR,EAAc,OAAd,CADR;AAEDG,IAAAA,SAAS,EAAErB,CAAC,CAACsB,OAAF,CAAUJ,KAAV,EAAiB,QAAjB,EAA2B,OAA3B,CAFV;AAGDK,IAAAA,KAAK,EAAEL;AAHN,GADI,CAFC,EAMUA,KANV,EAAd;;AAQA,MAAIM,OAAO,GAAGxB,CAAC,CAACI,OAAD,CAAD,CAAW;AAAX,GACbW,OADa,CACLC,CAAC,IAAIA,CAAC,CAACS,MADF,EAEbd,GAFa,CAET,CAACO,KAAD,EAAQC,GAAR,MACJ;AAACM,IAAAA,MAAM,EAAEN,GAAT;AACDf,IAAAA,OAAO,EAAEJ,CAAC,CAACoB,KAAF,CAAQF,KAAR,EAAc,OAAd,CADR;AAEDK,IAAAA,KAAK,EAAEvB,CAAC,CAACoB,KAAF,CAAQF,KAAR,EAAe,QAAf,CAFN;AAGDQ,IAAAA,MAAM,EAAER;AAHP,GADI,CAFS,EAMGA,KANH,EAAd;;AAOQN,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYW,OAAZ;AAEA,MAAIG,GAAG,GAAGvB,OAAO,CAACwB,MAAR,CAAgB,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAW;AACjC,QAAIA,CAAC,KAAK,CAAV,EACIF,CAAC,CAACG,IAAF,CAAOF,CAAP,EADJ,KAGI,IAAI,OAAOD,CAAC,CAACI,IAAF,CAAQC,EAAE,IAAIA,EAAE,CAACjB,IAAH,IAAWa,CAAC,CAACb,IAAb,IAAqBiB,EAAE,CAACT,MAAH,IAAaK,CAAC,CAACL,MAApC,KAA+CS,EAAE,CAACC,KAAH,IAAYL,CAAC,CAACK,KAA7D,CAAd,CAAP,IAA6F,WAAjG,EACIN,CAAC,CAACG,IAAF,CAAOF,CAAP;AACR,WAAOD,CAAP;AACH,GAPS,EAOP,EAPO,CAAV;AAQIjB,EAAAA,OAAO,CAACC,GAAR,CAAac,GAAb;AACZ,QAAMS,oBAAoB,GAAGtB,OAAO,CAACH,GAAR,CAAY,CAAC0B,MAAD,EAAQC,KAAR,kBACzC;AAAA,2BACA;AAAA,8BAAI;AAAA,kBAAKD,MAAM,CAACpB;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAJ,eAA0B;AAAA,kBAAKoB,MAAM,CAACjC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAA1B,eACA;AAAA,kBAAKiC,MAAM,CAAChB;AAAZ;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBAD6B,CAA7B;;AAOA,QAAMkB,QAAQ,gBACV;AAAA,4BACA;AAAA,6BACA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA,eAQJ;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YARI;AAAA,kBADJ;;AAeA,sBACI;AAAA,4BACA;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eACoD;AAAA;AAAA;AAAA;AAAA,YADpD,eAEA;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,IAAI,EAAC,IAAnC;AAAA,kBACED;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAUH,CA5ED;;GAAMtC,a;;KAAAA,a;AA6EN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport UserService from '../user/services/user-services';\r\nimport {getProfessionalsResults} from '../user/services/user-services';\r\nimport _ from 'lodash';\r\n\r\nconst Ammattilaiset = () => {\r\n    const[group, setGroup] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n    useEffect (() =>{\r\n        getProfessionalsResults().then(response => setResults(response));\r\n    }, [])\r\n\r\n    let personCount = 0; //suorittajalkm:n laskemiseksi\r\n    const personCounter = () => {\r\n        return personCount++;\r\n    };\r\n    \r\n   \r\n    let personArray = results.map(personCounter);\r\n    console.log(personArray);\r\n    console.log(personCount);\r\n\r\n    var pResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\r\n            .groupBy(x => x.date)\r\n            .map((value, key) => \r\n            ({date: key,\r\n            results: _.sumBy(value,'times'),\r\n            nroPeople: _.countBy(value, 'person')['lilly'],\r\n            users: value})).value();\r\n\r\n    var hResult = _(results) //Ryhmittele tietokannan tiedot päivittäin ja laske treenien määrä päivittäin\r\n    .groupBy(x => x.person)\r\n    .map((value, key) => \r\n    ({person: key,\r\n    results: _.sumBy(value,'times'),\r\n    users: _.sumBy(value, 'person'),\r\n    users1: value})).value();\r\n            console.log(pResult);\r\n            console.log(hResult);\r\n\r\n            var out = results.reduce( (s,e,i) => {\r\n                if (i === 0)\r\n                    s.push(e);\r\n                else\r\n                    if (typeof s.find( ss => ss.date == e.date && ss.person == e.person && (ss.times += e.times)) == 'undefined')\r\n                        s.push(e);\r\n                return s;\r\n            }, []);\r\n                console.log( out );        \r\n    const professionalsResults = pResult.map((result,index) => \r\n    <>\r\n    <tr><td>{result.date}</td><td>{result.results}</td>\r\n    <td>{result.nroPeople}</td></tr>\r\n    </>\r\n    );\r\n    \r\n    const pResults = (\r\n        <>\r\n        <thead>\r\n        <tr>\r\n        <th>Pvm</th>\r\n        <th>Suoritukset yhteensä</th>\r\n        <th>Suorittajalkm</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {professionalsResults}\r\n    </tbody>\r\n    </>\r\n    );\r\n    \r\n    return(\r\n        <>\r\n        <h2 style={{textAlign: \"center\"}}>Ammattilaiset</h2><br />\r\n        <div id=\"table-div\">\r\n            <Table striped bordered hover size=\"sm\">\r\n             {pResults}\r\n            </Table>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Ammattilaiset;"]},"metadata":{},"sourceType":"module"}
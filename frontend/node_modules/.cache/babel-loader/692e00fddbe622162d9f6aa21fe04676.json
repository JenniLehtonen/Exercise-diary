{"ast":null,"code":"import axios from 'axios';\nimport { useContext } from 'react';\nconst baseUrlUsers = 'http://localhost:5000/api/users';\nconst baseUrlResults = 'http://localhost:5000/api/results';\n\nconst addWorkout = async newObject => {\n  const config = {\n    method: 'post',\n    url: baseUrlResults + '/id/',\n    headers: {},\n    data: newObject\n  }; //näihin kohtiin ;?\n\n  try {\n    let res = await axios(config);\n    return res.data;\n  } catch (error) {\n    alert(error);\n    return;\n  }\n\n  ;\n};\n\nconst deleteWorkout = async workout => {\n  const config = {\n    method: 'delete',\n    url: baseUrlResults + '/:_id/',\n    //pitäisikö tässä olla workout?\n    headers: {},\n    data: workout\n  }; //näihin kohtiin ;?\n\n  try {\n    let res = await axios(config);\n    return res.data;\n  } catch (error) {\n    alert(error);\n    return;\n  }\n\n  ;\n};\n\nconst getProfessionalsResults = async () => {\n  const config = {\n    method: 'get',\n    url: baseUrlResults + '/professionals/',\n    headers: {}\n  };\n\n  try {\n    let res = await axios(config);\n    return res.data;\n  } catch (error) {\n    alert(error);\n    return;\n  }\n\n  ;\n};\n\nconst getAmateursResults = async () => {\n  const config = {\n    method: 'get',\n    url: baseUrlResults + '/amateurs/',\n    headers: {}\n  };\n\n  try {\n    let res = await axios(config);\n    return res.data;\n  } catch (error) {\n    alert(error);\n    return;\n  }\n\n  ;\n};\n\nconst signup = async (newObject, setError) => {\n  await axios.post(`${baseUrlUsers}/register/`, newObject).then(response => {\n    return response;\n  }).catch(error => {\n    if (error.response) {\n      let customError = error.response;\n      customError.userMessage = \"Rekisteröityminen epäonnistui\";\n      setError(customError);\n      return error;\n    }\n  });\n};\n\nconst login = async (newObject, setError, login, setUID) => {\n  await axios.post(`${baseUrlUsers}/login/`, newObject).then(response => {\n    login();\n    setUID(newObject.uid);\n    return response;\n  }).catch(error => {\n    if (error.response) {\n      let customError = error.response;\n      customError.userMessage = \"Käyttäjää ei ole olemassa. Tarkista käyttäjätunnuksesi ja yritä uudelleen!\";\n      setError(customError);\n      return error;\n    }\n  });\n};\n\nexport { getAmateursResults, getProfessionalsResults, addWorkout };","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/user/services/user-services.js"],"names":["axios","useContext","baseUrlUsers","baseUrlResults","addWorkout","newObject","config","method","url","headers","data","res","error","alert","deleteWorkout","workout","getProfessionalsResults","getAmateursResults","signup","setError","post","then","response","catch","customError","userMessage","login","setUID","uid"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {useContext} from 'react';\r\n\r\nconst baseUrlUsers = 'http://localhost:5000/api/users';\r\nconst baseUrlResults = 'http://localhost:5000/api/results';\r\n\r\nconst addWorkout = async (newObject) => {\r\n    const config = {\r\n        method: 'post',\r\n        url: baseUrlResults + '/id/',\r\n        headers: {},\r\n        data: newObject\r\n    }//näihin kohtiin ;?\r\n    try {\r\n        let res = await axios(config);\r\n        return res.data;\r\n    } catch (error){\r\n        alert(error);\r\n        return;\r\n    };\r\n};\r\n\r\nconst deleteWorkout = async (workout) => {\r\n    const config = {\r\n        method: 'delete',\r\n        url: baseUrlResults + '/:_id/', //pitäisikö tässä olla workout?\r\n        headers: {},\r\n        data: workout\r\n    }//näihin kohtiin ;?\r\n    try {\r\n        let res = await axios(config);\r\n        return res.data;\r\n    } catch (error){\r\n        alert(error);\r\n        return;\r\n    };\r\n};\r\n\r\nconst getProfessionalsResults = async () => {\r\n    \r\n    const config = {\r\n        method: 'get',\r\n        url: baseUrlResults + '/professionals/',\r\n        headers: {}\r\n    }\r\n    try {\r\n        let res = await axios(config);\r\n        return res.data;\r\n    } catch (error){\r\n        alert(error);\r\n        return;\r\n    };\r\n};\r\n\r\nconst getAmateursResults = async () => {\r\n    \r\n    const config = {\r\n        method: 'get',\r\n        url: baseUrlResults + '/amateurs/',\r\n        headers: {}\r\n    }\r\n    try {\r\n        let res = await axios(config);\r\n        return res.data;\r\n    } catch (error){\r\n        alert(error);\r\n        return;\r\n    };\r\n};\r\n\r\nconst signup = async (newObject, setError) =>{\r\n    await axios.post(`${baseUrlUsers}/register/`, newObject)\r\n    .then(response => {\r\n        return response;\r\n    })\r\n    .catch (error => {\r\n        if(error.response){\r\n            let customError = error.response;\r\n            customError.userMessage = \"Rekisteröityminen epäonnistui\";\r\n            setError(customError);\r\n            return error;\r\n        }\r\n    })\r\n}\r\n\r\nconst login = async (newObject, setError, login, setUID) => {\r\n    await axios.post (`${baseUrlUsers}/login/`, newObject)\r\n    .then(response =>{\r\n        login();\r\n        setUID(newObject.uid);\r\n        return response;\r\n    })\r\n    .catch (error => {\r\n        if(error.response){\r\n            let customError = error.response;\r\n            customError.userMessage = \"Käyttäjää ei ole olemassa. Tarkista käyttäjätunnuksesi ja yritä uudelleen!\";\r\n            setError(customError);\r\n            return error;\r\n        }\r\n    })\r\n}\r\n\r\nexport {getAmateursResults, getProfessionalsResults, addWorkout}"]},"metadata":{},"sourceType":"module"}
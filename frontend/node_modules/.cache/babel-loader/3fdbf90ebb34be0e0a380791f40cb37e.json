{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni\\\\Documents\\\\GitHub\\\\harjoitus4-JenniMERN\\\\frontend\\\\src\\\\components\\\\DeleteWorkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Form, Alert } from 'react-bootstrap';\nimport UserContext from '../contexts/UserContext';\nimport ErrorContext from '../contexts/ErrorContext';\nimport { getResultsByUser, deleteWorkout } from '../user/services/user-services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Testi = () => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"MOIKKA KAIKKI\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Testi;\n\nconst DeleteWorkoutFromDB = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [show, setShow] = useState(true); //Virheilmoituksen näyttämiseen\n\n  const userContext = useContext(UserContext);\n  const errorContext = useContext(ErrorContext);\n  let option; //alustetaan muuttuja. Tämän avulla saadaan valittu vaihtoehto dropdown listoissa.\n\n  let removeSuccess = /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"success\",\n    children: \"Treenin poistaminen onnistui!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this); //Alustetaan muuttuja, jotta ilmoitus treenin poistamisen onnistumisesta pystytään näyttämään\n\n\n  let workouts = {\n    email: userContext.Email //haetaan kirjautuneen käyttäjän sähköpostiosoite contextista, ja sen avulla haetaan käyttäjän omat treenit tietokannasta\n\n  };\n  useEffect(() => {\n    getResultsByUser(workouts, userContext.token).then(response => setResults(response)); //Haetaan kirjautuneen käyttäjän treenit tietokannasta\n  }, []);\n\n  const optionHandler = e => {\n    e.preventDefault();\n    option = e.target.value;\n    option = option.substr(option.lastIndexOf(\" \") + 1); //Erotetaan valitun treenin id\n  };\n\n  const sendWorkoutToBeDeleted = () => {\n    deleteWorkout(option, userContext.token, errorContext.setAppError, userContext.setSuccess); //Lähetetään valittu treeni poistettavaksi\n  };\n\n  const closeErrorMessage = () => {\n    //Kun painetaan rastia virheilmoituksessa, suljetaan virheilmoitus ja poistetaan virhe errorcontextista\n    setShow(false);\n    errorContext.setAppError(null);\n  };\n  /*if(userContext.Success===true){\r\n    removeSuccess = (\r\n      <Alert variant=\"success\">\r\n        Treenin poistaminen onnistui!\r\n      </Alert>\r\n    );\r\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errorContext.appError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => closeErrorMessage(),\n      dismissible: true,\n      children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: \"Virhe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorContext.appError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Valitse poistettava treeni alasvetovalikosta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        size: \"sm\",\n        as: \"select\",\n        onChange: e => optionHandler(e),\n        children: results && results.map((result, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: result.date + \" \" + result.sport + \" \" + result._id\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: sendWorkoutToBeDeleted,\n      children: \"Poista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 78\n    }, this), userContext.Success === true && /*#__PURE__*/_jsxDEV(Testi, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteWorkoutFromDB, \"taayFRi4oiwW9cCBjcUsIkiLnbI=\");\n\n_c2 = DeleteWorkoutFromDB;\nexport default DeleteWorkoutFromDB;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Testi\");\n$RefreshReg$(_c2, \"DeleteWorkoutFromDB\");","map":{"version":3,"sources":["C:/Users/jenni/Documents/GitHub/harjoitus4-JenniMERN/frontend/src/components/DeleteWorkout.js"],"names":["React","useState","useEffect","useContext","Button","Form","Alert","UserContext","ErrorContext","getResultsByUser","deleteWorkout","Testi","DeleteWorkoutFromDB","results","setResults","show","setShow","userContext","errorContext","option","removeSuccess","workouts","email","Email","token","then","response","optionHandler","e","preventDefault","target","value","substr","lastIndexOf","sendWorkoutToBeDeleted","setAppError","setSuccess","closeErrorMessage","appError","map","result","index","date","sport","_id","Success"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport {Button, Form, Alert} from 'react-bootstrap';\r\nimport UserContext from '../contexts/UserContext';\r\nimport ErrorContext from '../contexts/ErrorContext';\r\nimport {getResultsByUser, deleteWorkout} from '../user/services/user-services';\r\n\r\nconst Testi = () => {\r\n  return(\r\n    <p>MOIKKA KAIKKI</p>\r\n  )\r\n}\r\n\r\nconst DeleteWorkoutFromDB = () => {\r\n    const [results, setResults] = useState([]);\r\n    const [show, setShow] = useState(true); //Virheilmoituksen näyttämiseen\r\n    const userContext = useContext(UserContext);\r\n    const errorContext = useContext(ErrorContext);\r\n    let option; //alustetaan muuttuja. Tämän avulla saadaan valittu vaihtoehto dropdown listoissa.\r\n    let removeSuccess = (\r\n      <Alert variant=\"success\">\r\n        Treenin poistaminen onnistui!\r\n      </Alert>\r\n    ); //Alustetaan muuttuja, jotta ilmoitus treenin poistamisen onnistumisesta pystytään näyttämään\r\n    let workouts = {\r\n        email: userContext.Email //haetaan kirjautuneen käyttäjän sähköpostiosoite contextista, ja sen avulla haetaan käyttäjän omat treenit tietokannasta\r\n    };\r\n\r\n    useEffect (() =>{\r\n        getResultsByUser(workouts, userContext.token).then(response => setResults(response)); //Haetaan kirjautuneen käyttäjän treenit tietokannasta\r\n    }, [])\r\n\r\n    const optionHandler = (e) => {\r\n        e.preventDefault();\r\n        option=e.target.value;\r\n        option = option.substr(option.lastIndexOf(\" \")+1); //Erotetaan valitun treenin id\r\n    };\r\n\r\n    const sendWorkoutToBeDeleted = () => {\r\n        deleteWorkout(option, userContext.token, errorContext.setAppError, userContext.setSuccess); //Lähetetään valittu treeni poistettavaksi\r\n    };\r\n\r\n    const closeErrorMessage = () => { //Kun painetaan rastia virheilmoituksessa, suljetaan virheilmoitus ja poistetaan virhe errorcontextista\r\n        setShow(false);\r\n        errorContext.setAppError(null);\r\n      };\r\n\r\n      /*if(userContext.Success===true){\r\n        removeSuccess = (\r\n          <Alert variant=\"success\">\r\n            Treenin poistaminen onnistui!\r\n          </Alert>\r\n        );\r\n      }*/\r\n    return(\r\n        <>\r\n         {errorContext.appError && \r\n          <Alert variant=\"danger\" onClose={() => closeErrorMessage()} dismissible>\r\n            <Alert.Heading>Virhe</Alert.Heading>\r\n            <p>\r\n              {errorContext.appError}\r\n            </p>\r\n          </Alert>\r\n          }\r\n            <h6>Valitse poistettava treeni alasvetovalikosta</h6>\r\n              <Form.Group>\r\n                <Form.Control size=\"sm\" as=\"select\" onChange={(e) => optionHandler(e)}>\r\n                {results && results.map((result, index) => {\r\n                      return <option key={index}>{result.date + \" \" + result.sport + \" \" + result._id}</option>;\r\n                   })}\r\n                </Form.Control>\r\n             </Form.Group>\r\n             <Button onClick = {sendWorkoutToBeDeleted}>Poista</Button><br /><br />\r\n             {userContext.Success===true&&<Testi />}\r\n          </>\r\n    )\r\n}\r\nexport default DeleteWorkoutFromDB;"]},"metadata":{},"sourceType":"module"}